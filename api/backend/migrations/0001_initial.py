# Generated by Django 4.2 on 2023-11-30 16:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accreditation',
            fields=[
                ('accreditation_url', models.URLField(max_length=255)),
                ('accreditation_label', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('accreditation_key', models.CharField(max_length=255)),
                ('accreditation_type', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Added',
            fields=[
                ('property_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('added_date', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Broadband',
            fields=[
                ('property_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('standard_upload', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('standard_download', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('super_fast_upload', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('super_fast_download', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('ultra_fast_upload', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('ultra_fast_download', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EPC',
            fields=[
                ('property_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('epc_url', models.URLField(max_length=255, null=True)),
                ('epc_scraped', models.BooleanField(default=False)),
                ('epc_current', models.IntegerField(null=True)),
                ('epc_potential', models.IntegerField(null=True)),
                ('epc_image', models.ImageField(null=True, upload_to='epc_image/')),
            ],
        ),
        migrations.CreateModel(
            name='EstateAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('branch_name', models.CharField(max_length=200, null=True)),
                ('branch_display_address', models.CharField(max_length=200, null=True)),
                ('branch_url', models.CharField(max_length=200, null=True)),
                ('branch_description', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Floorplans',
            fields=[
                ('composite_id', models.CharField(max_length=25, primary_key=True, serialize=False)),
                ('floorplan_file', models.ImageField(null=True, upload_to='floorplan/')),
                ('floorplan_file_resized', models.ImageField(null=True, upload_to='floorplan/')),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('composite_id', models.CharField(max_length=25, primary_key=True, serialize=False)),
                ('image_file', models.ImageField(null=True, upload_to='image/')),
                ('image_file_resized', models.ImageField(null=True, upload_to='image/')),
            ],
        ),
        migrations.CreateModel(
            name='Layout',
            fields=[
                ('property_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('bathrooms', models.IntegerField(null=True)),
                ('bedrooms', models.IntegerField(null=True)),
                ('receptions', models.IntegerField(null=True)),
                ('property_type', models.CharField(max_length=255, null=True)),
                ('min_size', models.DecimalField(decimal_places=10, max_digits=20, null=True)),
                ('max_size', models.DecimalField(decimal_places=10, max_digits=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ListingType',
            fields=[
                ('property_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('listing_type', models.CharField(max_length=30, null=True)),
                ('letting_type', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('property_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=255, null=True)),
                ('town', models.CharField(max_length=255, null=True)),
                ('postcode', models.CharField(max_length=8, null=True)),
                ('street', models.CharField(max_length=255, null=True)),
                ('display_address', models.CharField(max_length=255)),
                ('lat', models.DecimalField(decimal_places=10, max_digits=20, null=True)),
                ('long', models.DecimalField(decimal_places=10, max_digits=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OwnershipRetirement',
            fields=[
                ('property_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('ownership_type', models.BooleanField(null=True)),
                ('retirement_home', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('property', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('url', models.URLField()),
                ('un_published', models.BooleanField(default=False)),
                ('scraped_before', models.BooleanField(default=False)),
                ('stc', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('station_name', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('station_type', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('property_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('tax_band', models.CharField(max_length=20, null=True)),
                ('tax_exempt', models.BooleanField(null=True)),
                ('tax_included', models.BooleanField(null=True)),
                ('annual_ground_rent', models.DecimalField(decimal_places=10, max_digits=20, null=True)),
                ('annual_ground_rent_review_period', models.IntegerField(null=True)),
                ('annual_ground_rent_percentage_increase', models.DecimalField(decimal_places=10, max_digits=20, null=True)),
                ('annual_service_charge', models.DecimalField(decimal_places=10, max_digits=20, null=True)),
                ('domestic_rates', models.DecimalField(decimal_places=10, max_digits=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tenure',
            fields=[
                ('property_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('tenure_type', models.CharField(max_length=20, null=True)),
                ('tenure_lease_years', models.IntegerField(null=True)),
                ('tenure_text', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TextElements',
            fields=[
                ('property_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('description', models.TextField(null=True)),
                ('share_text', models.TextField(null=True)),
                ('share_description', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyValue',
            fields=[
                ('property_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='backend.property')),
                ('added', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='added_id', to='backend.added')),
                ('broadband', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='broadband_id', to='backend.broadband')),
                ('epc', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='epc_id', to='backend.epc')),
            ],
        ),
        migrations.CreateModel(
            name='EstateAgentAccreditation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('have_accreditation', models.BooleanField(default=False)),
                ('accreditation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accreditation_id', to='backend.accreditation')),
                ('estate_agent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estate_agent_id', to='backend.estateagent')),
            ],
            options={
                'unique_together': {('estate_agent_id', 'accreditation_id')},
            },
        ),
        migrations.AddField(
            model_name='estateagent',
            name='accreditations',
            field=models.ManyToManyField(through='backend.EstateAgentAccreditation', to='backend.accreditation'),
        ),
        migrations.CreateModel(
            name='StationStationDistance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_distance', models.DecimalField(decimal_places=16, max_digits=20)),
                ('station_distance_units', models.CharField(max_length=20, null=True)),
                ('station_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station_id', to='backend.station')),
                ('property_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.propertyvalue')),
            ],
            options={
                'unique_together': {('property_id', 'station_id')},
            },
        ),
        migrations.AddField(
            model_name='propertyvalue',
            name='estate_agent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estate_agent', to='backend.estateagent'),
        ),
        migrations.AddField(
            model_name='propertyvalue',
            name='layout',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='layout_id', to='backend.layout'),
        ),
        migrations.AddField(
            model_name='propertyvalue',
            name='listing_type',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='listing_type_id', to='backend.listingtype'),
        ),
        migrations.AddField(
            model_name='propertyvalue',
            name='location',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_id', to='backend.location'),
        ),
        migrations.AddField(
            model_name='propertyvalue',
            name='ownership',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownership_id', to='backend.ownershipretirement'),
        ),
        migrations.AddField(
            model_name='propertyvalue',
            name='stations',
            field=models.ManyToManyField(through='backend.StationStationDistance', to='backend.station'),
        ),
        migrations.AddField(
            model_name='propertyvalue',
            name='tax',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tax_id', to='backend.tax'),
        ),
        migrations.AddField(
            model_name='propertyvalue',
            name='tenure',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tenure_id', to='backend.tenure'),
        ),
        migrations.AddField(
            model_name='propertyvalue',
            name='text_elements',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='text_elements_id', to='backend.textelements'),
        ),
        migrations.AddField(
            model_name='property',
            name='property_values',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.propertyvalue'),
        ),
        migrations.AlterUniqueTogether(
            name='estateagent',
            unique_together={('name', 'branch_name')},
        ),
        migrations.CreateModel(
            name='Views',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('views', models.IntegerField(null=True)),
                ('unique_views', models.IntegerField(null=True)),
                ('view_date', models.DateField(null=True)),
                ('featured', models.BooleanField(null=True)),
                ('bumped', models.BooleanField(null=True)),
                ('published', models.BooleanField(null=True)),
                ('property_id', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='backend.propertyvalue')),
            ],
            options={
                'unique_together': {('property_id', 'view_date')},
            },
        ),
        migrations.CreateModel(
            name='Statuses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False, null=True)),
                ('status_date', models.DateField(null=True)),
                ('property_id', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='backend.propertyvalue')),
            ],
            options={
                'unique_together': {('property_id', 'status', 'status_date')},
            },
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.IntegerField(null=True)),
                ('room_name', models.CharField(max_length=255, null=True)),
                ('room_description', models.TextField(null=True)),
                ('room_width', models.DecimalField(decimal_places=10, max_digits=20, null=True)),
                ('room_length', models.DecimalField(decimal_places=10, max_digits=20, null=True)),
                ('room_unit', models.CharField(max_length=10, null=True)),
                ('property_id', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='backend.propertyvalue')),
            ],
            options={
                'unique_together': {('property_id', 'room')},
            },
        ),
        migrations.CreateModel(
            name='Prices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(null=True)),
                ('price_date', models.DateField(null=True)),
                ('price_qualifier', models.CharField(max_length=255, null=True)),
                ('price_type', models.CharField(max_length=255, null=True)),
                ('property_id', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='backend.propertyvalue')),
            ],
            options={
                'unique_together': {('property_id', 'price')},
            },
        ),
        migrations.CreateModel(
            name='KeyFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_feature', models.CharField(max_length=255, null=True)),
                ('key_feature_text', models.CharField(max_length=255, null=True)),
                ('property_id', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='backend.propertyvalue')),
            ],
            options={
                'unique_together': {('property_id', 'key_feature')},
            },
        ),
        migrations.CreateModel(
            name='ImageProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_id', models.IntegerField()),
                ('image_url', models.URLField()),
                ('image_caption', models.CharField(max_length=100, null=True)),
                ('image_url_resized', models.URLField(null=True)),
                ('image_scraped', models.BooleanField(default=False)),
                ('image_data', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='image_id', to='backend.images')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.propertyvalue')),
            ],
            options={
                'unique_together': {('property', 'image_id')},
            },
        ),
        migrations.CreateModel(
            name='FloorplanProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floorplan_id', models.IntegerField()),
                ('floorplan_url', models.URLField()),
                ('floorplan_caption', models.CharField(max_length=100, null=True)),
                ('floorplan_url_resized', models.URLField(null=True)),
                ('floorplan_scraped', models.BooleanField(default=False)),
                ('floorplan_data', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='floorplan_id', to='backend.floorplans')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.propertyvalue')),
            ],
            options={
                'unique_together': {('property', 'floorplan_id')},
            },
        ),
    ]
