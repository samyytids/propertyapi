# Generated by Django 4.2 on 2023-12-21 22:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('affiliation_name', models.CharField(max_length=5000, unique=True)),
            ],
            options={
                'db_table': 'affiliation',
            },
        ),
        migrations.CreateModel(
            name='AgentAffiliation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('affiliation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.affiliation')),
            ],
            options={
                'db_table': 'agent_affiliation',
            },
        ),
        migrations.CreateModel(
            name='BusinessType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_id', models.CharField(max_length=50, unique=True)),
                ('use_class', models.CharField(max_length=5000, null=True)),
                ('sector', models.CharField(max_length=5000, null=True)),
            ],
            options={
                'db_table': 'business type',
            },
        ),
        migrations.CreateModel(
            name='Epc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_id', models.CharField(max_length=50, unique=True)),
                ('epc_url', models.URLField(null=True)),
                ('epc_caption', models.CharField(max_length=5000, null=True)),
                ('epc_current', models.IntegerField(null=True)),
                ('epc_potential', models.IntegerField(null=True)),
                ('ei_url', models.URLField(null=True)),
                ('ei_caption', models.CharField(max_length=5000, null=True)),
                ('ei_current', models.IntegerField(null=True)),
                ('ei_potential', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'epc',
            },
        ),
        migrations.CreateModel(
            name='EstateAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_type', models.CharField(max_length=5000)),
                ('agent_url', models.URLField()),
                ('agent_url_type', models.CharField(max_length=5000)),
                ('agent_name', models.CharField(max_length=5000)),
                ('branch_name', models.CharField(max_length=5000, null=True)),
                ('agent_description', models.CharField(max_length=5000)),
                ('developer', models.BooleanField()),
                ('affiliation', models.ManyToManyField(through='backend.AgentAffiliation', to='backend.affiliation')),
            ],
            options={
                'db_table': 'estate_agent',
                'unique_together': {('agent_name', 'branch_name')},
            },
        ),
        migrations.CreateModel(
            name='Layout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_id', models.CharField(max_length=50, unique=True)),
                ('bedrooms', models.IntegerField()),
                ('bathrooms', models.IntegerField(null=True)),
                ('size', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'layout',
            },
        ),
        migrations.CreateModel(
            name='LettingInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_id', models.CharField(max_length=50, unique=True)),
                ('let_available_date', models.DateField(null=True)),
                ('deposit', models.IntegerField(null=True)),
                ('minimum_tenancy_length', models.IntegerField(null=True)),
                ('let_type', models.CharField(max_length=12, null=True)),
                ('furnishing_type', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'letting info',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_id', models.CharField(max_length=50, unique=True)),
                ('address', models.CharField(max_length=5000)),
                ('country', models.CharField(max_length=50, null=True)),
                ('postcode', models.CharField(max_length=9)),
                ('latitude', models.DecimalField(decimal_places=10, max_digits=50, null=True)),
                ('longitude', models.DecimalField(decimal_places=10, max_digits=50, null=True)),
            ],
            options={
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='Ownership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_id', models.CharField(max_length=50, unique=True)),
                ('shared_ownership', models.BooleanField()),
                ('ownership_percentage', models.IntegerField(null=True)),
                ('rent_price', models.IntegerField(null=True)),
                ('rent_frequency', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'ownership',
            },
        ),
        migrations.CreateModel(
            name='PropertyData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_id', models.CharField(max_length=50, unique=True)),
                ('property_url', models.URLField()),
                ('listing_type', models.CharField(max_length=3)),
                ('transaction_type', models.CharField(max_length=3)),
                ('virtual_tour', models.BooleanField()),
                ('auction', models.BooleanField()),
                ('retirement', models.BooleanField()),
                ('affordable_scheme', models.BooleanField()),
                ('property_type', models.CharField(max_length=50)),
                ('property_sub_type', models.CharField(max_length=50)),
                ('added_date', models.DateField()),
                ('letting_type', models.CharField(max_length=50)),
                ('pre_owned', models.CharField(max_length=50)),
                ('furnished', models.CharField(max_length=50)),
                ('current_price', models.IntegerField()),
                ('reduced', models.BooleanField()),
                ('online_viewing', models.BooleanField()),
                ('first_scraped', models.DateField()),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.estateagent')),
                ('business_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.businesstype')),
                ('epc', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.epc')),
                ('layout', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='backend.layout')),
                ('letting_info', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.lettinginfo')),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='backend.location')),
            ],
            options={
                'db_table': 'property_data',
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_name', models.CharField(max_length=5000, unique=True)),
                ('station_type', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'station',
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_id', models.CharField(max_length=50, unique=True)),
                ('council_tax_exempt', models.BooleanField()),
                ('council_tax_included', models.BooleanField()),
                ('annual_ground_rent', models.IntegerField(null=True)),
                ('ground_rent_review_period_in_years', models.IntegerField(null=True)),
                ('ground_rent_percentage_increase', models.IntegerField(null=True)),
                ('annual_service_charge', models.IntegerField(null=True)),
                ('council_tax_band', models.CharField(max_length=50, null=True)),
                ('domestic_rates', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'tax',
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_id', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(default='')),
                ('disclaimer', models.TextField(default='')),
                ('auction_fees_disclaimer', models.TextField(null=True)),
                ('guide_price_disclaimer', models.TextField(null=True)),
                ('reserve_price_disclaimer', models.TextField(null=True)),
                ('static_map_disclaimer_text', models.TextField(null=True)),
                ('new_homes_brochure_disclaimer', models.TextField(default='')),
                ('share_text', models.TextField(default='')),
                ('share_description', models.TextField(default='')),
                ('page_title', models.TextField(default='')),
                ('short_description', models.TextField(default='')),
            ],
            options={
                'db_table': 'text',
            },
        ),
        migrations.CreateModel(
            name='StationDistance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_distance', models.DecimalField(decimal_places=10, max_digits=50)),
                ('station_distance_unit', models.CharField(max_length=10)),
                ('property_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.propertydata')),
                ('station_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.station')),
            ],
            options={
                'db_table': 'station_distance',
                'unique_together': {('station_id', 'property_id')},
            },
        ),
        migrations.AddField(
            model_name='propertydata',
            name='station',
            field=models.ManyToManyField(through='backend.StationDistance', to='backend.station'),
        ),
        migrations.AddField(
            model_name='propertydata',
            name='tax',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='backend.tax'),
        ),
        migrations.AddField(
            model_name='propertydata',
            name='text',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='backend.text'),
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_id', models.CharField(max_length=50, unique=True)),
                ('property_url', models.URLField()),
                ('scraped_before', models.BooleanField(default=False)),
                ('un_published', models.BooleanField(default=False)),
                ('archived', models.BooleanField(default=False)),
                ('bad_data', models.BooleanField(default=False)),
                ('removed', models.BooleanField(default=False)),
                ('stc', models.BooleanField(default=False)),
                ('property_data', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.propertydata')),
            ],
            options={
                'db_table': 'property',
            },
        ),
        migrations.AddField(
            model_name='agentaffiliation',
            name='agent_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.estateagent'),
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stc', models.BooleanField()),
                ('status_date', models.DateField()),
                ('property_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.property')),
            ],
            options={
                'db_table': 'status',
                'unique_together': {('stc', 'property_id')},
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=5000, null=True)),
                ('room_description', models.CharField(max_length=5000, null=True)),
                ('room_width', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('room_length', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('room_unit', models.CharField(max_length=4, null=True)),
                ('room_dimension', models.CharField(max_length=50, null=True)),
                ('property_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.property')),
            ],
            options={
                'db_table': 'room',
                'unique_together': {('property_id', 'room_name', 'room_description')},
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
                ('price_qualifier', models.CharField(max_length=50, null=True)),
                ('original_price', models.IntegerField()),
                ('price_date', models.DateField()),
                ('property_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.property')),
            ],
            options={
                'db_table': 'price',
                'unique_together': {('price', 'property_id')},
            },
        ),
        migrations.CreateModel(
            name='PremiumListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('featured_property', models.BooleanField()),
                ('premium_listing', models.BooleanField()),
                ('listing_date', models.DateField()),
                ('property_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.property')),
            ],
            options={
                'db_table': 'premium_listing',
                'unique_together': {('property_id', 'listing_date')},
            },
        ),
        migrations.CreateModel(
            name='KeyFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=5000)),
                ('property_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.property')),
            ],
            options={
                'db_table': 'key_feature',
                'unique_together': {('feature', 'property_id')},
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField()),
                ('image_caption', models.CharField(max_length=5000, null=True)),
                ('image_file', models.ImageField(null=True, upload_to='image/')),
                ('property_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.property')),
            ],
            options={
                'db_table': 'image',
                'unique_together': {('property_id', 'image_url')},
            },
        ),
        migrations.CreateModel(
            name='Floorplan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floorplan_url', models.URLField()),
                ('floorplan_caption', models.CharField(max_length=5000, null=True)),
                ('floorplan_file', models.ImageField(null=True, upload_to='floorplan/')),
                ('property_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.property')),
            ],
            options={
                'db_table': 'floorplan',
                'unique_together': {('property_id', 'floorplan_url')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='agentaffiliation',
            unique_together={('affiliation_id', 'agent_id')},
        ),
    ]
